package installation;

import java.io.File;
import java.nio.channels.FileLockInterruptionException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class CreateDB {
    public static final String DRIVER = "org.apache.derby.jdbc.EmbeddedDriver";
    public static final String JDBC_URL = "jdbc:derby:C:\\ProgramFiles\\DevicesMonitor\\deviceMon;create=true";
    public static final String JDBC_URL_toRun = "jdbc:derby:C:\\ProgramFiles\\DevicesMonitor\\deviceMon";
    public static final String firstDir = "C:\\ProgramFiles";
    public static final String dir = "C:\\ProgramFiles\\DevicesMonitor";
    public static final String dbPath = dir + "\\deviceMon";

    private static void createDir (String dir) throws FileLockInterruptionException {
        File dirFile = new File(dir);
        if (!dirFile.exists()){
            dirFile.mkdir();
            if (!dirFile.exists()) throw new FileLockInterruptionException();
        }
    }

    public static void main(String[] args) throws ClassNotFoundException, SQLException, FileLockInterruptionException {

        createDir(firstDir);
        createDir(dir);
        File dataBase = new File(dbPath);
        if(dataBase.exists()){
            System.out.println("There is already a database installed");
            return;
        }
        Class.forName(DRIVER);
        Connection connection = DriverManager.getConnection(JDBC_URL);
        connection.createStatement().execute("CREATE TABLE clients (id INTEGER NOT NULL GENERATED by default AS IDENTITY (start with 419, increment by 1) ," +
                "firstname varchar (30), lastname varchar (30) NOT NULL, phone varchar (15), PRIMARY KEY (id))");
        connection.createStatement().execute("CREATE TABLE devices (model varchar (40) PRIMARY KEY)");
        connection.createStatement().execute("CREATE TABLE installed_devices (fabrical_no varchar (30) unique not null, " +
                "client_id integer constraint client_fk references clients (id), device_model varchar (40) constraint dev_fk references devices(model)" +
                ", address varchar (70), montageDate date, disabled integer default 0, note varchar (100))");
        connection.createStatement().execute("CREATE TABLE check_table (fabrical_no varchar (30) " +
                "constraint fabr_fk references installed_devices (fabrical_no) on delete cascade ," +
                "check_date date," +
                "primary key (fabrical_no, check_date), note varchar (100))");
        connection.createStatement().execute("CREATE TABLE fix_table (fabrical_no varchar (30) " +
                "constraint fabrical_fk references installed_devices (fabrical_no) on delete cascade ," +
                "fix_date date," +
                "primary key (fabrical_no, fix_date), note varchar (100))");
        connection.createStatement().execute("CREATE INDEX client_name\n" +
                "ON CLIENTS ( LASTNAME asc , FIRSTNAME asc )");
        connection.createStatement().execute("create table lastCheckups(fabrical_no varchar (30) unique constraint" +
                " fabrNo_fk references installed_devices (fabrical_no) on delete cascade , lastCheckup date, note varchar(100) )");
        connection.createStatement().execute("create index checkup on lastCheckups (fabrical_no)");
        connection.close();
        System.out.println("Database creation complete");
    }


}
